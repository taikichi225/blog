<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dart on Clarity</title>
    <link>https://taikichi225.github.io/blog/tags/dart/</link>
    <description>Recent content in dart on Clarity</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright (C) 2021 taiki.kono, Inc. All Rights Reserved.</copyright>
    <lastBuildDate>Mon, 01 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://taikichi225.github.io/blog/tags/dart/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>テストページ</title>
      <link>https://taikichi225.github.io/blog/post/test/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://taikichi225.github.io/blog/post/test/</guid>
      <description>
        
          &lt;p&gt;テストページです。昔の記事を掘り起こして書いています。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;
&lt;p&gt;本記事は、&lt;a href=&#34;https://flutter-jp.connpass.com/event/126419/&#34;&gt;Flutter Meetup Tokyo #9&lt;/a&gt;でLTで話した内容に多少の追記を加えたものとなります。
LTスライドは&lt;a href=&#34;https://speakerdeck.com/taikichi225/flutter-for-webdegou-zhu-sitaapuriwocodemagic-plus-github-pagesdepei-xin-suru&#34;&gt;こちら&lt;/a&gt;にあります。&lt;/p&gt;
&lt;h1 id=&#34;flutter-for-webの発表&#34;&gt;Flutter for Webの発表&lt;/h1&gt;
&lt;p&gt;先日のGoogle I/O 2019でFlutter for Webのテクニカルプレビュー版が発表されました。Flutterは、Android/iOSだけでなく、Webアプリとしてブラウザで動かせるようになります。
ということで、Flutter for Webがどのようなものか早速触ってみました。&lt;/p&gt;
&lt;h1 id=&#34;構成&#34;&gt;構成&lt;/h1&gt;
&lt;p&gt;今回は、以下の構成で検証しました。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/155589/0add3df9-6176-60d9-0865-c2d1cca7c2c3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;概要&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Flutter for Web&lt;/td&gt;
&lt;td&gt;Flutter for Webは、FlutterをWebアプリとして生成する機能です。DartのコードをJavaScriptにコンパイルします。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Codemagic&lt;/td&gt;
&lt;td&gt;Flutterに特化した無料CI/CDツールです。リポジトリからソースコード取得・テスト実行・ビルド・GitHub Pagesへのデプロイを担当します。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GitHub Pages&lt;/td&gt;
&lt;td&gt;GitHubの提供する静的コンテンツのホスティングサービスです。GitHubのアカウントがあれば、無料で静的サイトが公開できます。Flutter for Webで構築したアプリを配信します。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;構築手順&#34;&gt;構築手順&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Flutter for Webの導入&lt;/li&gt;
&lt;li&gt;Github Pagesの準備&lt;/li&gt;
&lt;li&gt;Codemagicの設定&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;flutter-for-webの導入&#34;&gt;Flutter for Webの導入&lt;/h1&gt;
&lt;h2 id=&#34;1-flutter-for-webのソースコードのダウンロード&#34;&gt;1. Flutter for Webのソースコードのダウンロード&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git clone https://github.com/flutter/flutter_web.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2ビルドツールのインストール&#34;&gt;2.ビルドツールのインストール&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;flutter pub global activate webdev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3サンプルによる動作確認&#34;&gt;3.サンプルによる動作確認&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; examples/hello_world/
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;flutter packages upgrade
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;flutter pub global activate webdev serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4既存flutterプロジェクトのマイグレーション&#34;&gt;4.既存Flutterプロジェクトのマイグレーション&lt;/h2&gt;
&lt;p&gt;Flutterのゴールは、単一コードベースでモバイルとWebに対応したアプリケーションの構築です。しかし、今回発表されたテクニカルプレビュー版は、Flutter for Webに対応するために既存のFlutterコードを修正する必要があります。
&lt;a href=&#34;https://github.com/flutter/flutter_web/blob/master/docs/migration_guide.md&#34;&gt;ドキュメント&lt;/a&gt;を参考に修正します。大まかな手順は以下の3つです。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;pubspec.yamlの修正&lt;/li&gt;
&lt;li&gt;ソースコード内のimport文修正&lt;/li&gt;
&lt;li&gt;webディレクトリの追加&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;5githubにソースコード管理用リポジトリの作成&#34;&gt;5.GitHubにソースコード管理用リポジトリの作成&lt;/h2&gt;
&lt;p&gt;「flutter_web_demo」と名付けました。
この後作成するGitHub Pages用リポジトリとは別のものです。&lt;/p&gt;
&lt;h2 id=&#34;6ソースコードのプッシュ&#34;&gt;6.ソースコードのプッシュ&lt;/h2&gt;
&lt;h1 id=&#34;github-pagesの準備&#34;&gt;Github Pagesの準備&lt;/h1&gt;
&lt;h2 id=&#34;1アプリ公開用リポジトリの作成&#34;&gt;1.アプリ公開用リポジトリの作成&lt;/h2&gt;
&lt;p&gt;リポジトリ名に「ユーザ名.github.io」、リポジトリの種類に「Public」設定し、リポジトリを作成します。
私の場合は、「taikichi225.github.io」というリポジトリ名です。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/155589/49923d47-6dab-ac82-4948-acf550b1bc99.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2github-pages用リポジトリのクローン&#34;&gt;2.GitHub Pages用リポジトリのクローン&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git clone https://github.com/taikichi225/taikichi225.github.io.git
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; taikichi225.github.io
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt; &amp;gt; index.html
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;git add .
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3動作検証&#34;&gt;3.動作検証&lt;/h2&gt;
&lt;p&gt;以下にアクセスする。
&lt;a href=&#34;https://taikichi225.github.io/index.html&#34;&gt;https://taikichi225.github.io/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/155589/1f2f8f6a-bc8d-3ebb-522f-1abe77e83f94.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;codemagicの設定&#34;&gt;Codemagicの設定&lt;/h1&gt;
&lt;h2 id=&#34;1codemagicのサインアップ&#34;&gt;1.Codemagicのサインアップ&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/155589/1df11480-137a-6ba6-1014-7517dfea72a4.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2githubアカウントでログイン&#34;&gt;2.GitHubアカウントでログイン&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/155589/0eb47b5c-6938-e2e0-9f90-4b3178a981ef.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3ソースコード管理用リポジトリの確認&#34;&gt;3.ソースコード管理用リポジトリの確認&lt;/h2&gt;
&lt;p&gt;先ほどプッシュしたアプリのプロジェクトが確認できます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/155589/8af8463a-2d78-2852-8f57-957b196dd75f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4ワークフローの設定&#34;&gt;4.ワークフローの設定&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/155589/5dc62134-39d3-64d0-00de-8a184a958132.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;5post-build-scriptに以下のスクリプト追加&#34;&gt;5.Post-build scriptに以下のスクリプト追加&lt;/h2&gt;
&lt;p&gt;GitへのデプロイはCodemagicが対応しておらず、スクリプトを書きました。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; -ex
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;git config --global user.name &lt;span class=&#34;nv&#34;&gt;$GIT_USERNAME&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;git config --global user.password &lt;span class=&#34;nv&#34;&gt;$GIT_PASSWORD&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;git config --global user.email &lt;span class=&#34;nv&#34;&gt;$GIT_EMAIL&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;git clone https://github.com/taikichi225/taikichi225.github.io.git
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;rm -rf taikichi225.github.io/&lt;span class=&#34;nv&#34;&gt;$PROJECT_NAME&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;mkdir taikichi225.github.io/&lt;span class=&#34;nv&#34;&gt;$PROJECT_NAME&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;cp -r &lt;span class=&#34;nv&#34;&gt;$FCI_BUILD_DIR&lt;/span&gt;/build/ taikichi225.github.io/&lt;span class=&#34;nv&#34;&gt;$PROJECT_NAME&lt;/span&gt;/
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; taikichi225.github.io
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;git remote set-url origin &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;https://&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$GIT_USERNAME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$GIT_PASSWORD&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@github.com/taikichi225/taikichi225.github.io.git&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;git add .
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;deploy&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;動作確認&#34;&gt;動作確認&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://taikichi225.github.io/flutter_web_demo/index.html&#34;&gt;https://taikichi225.github.io/flutter_web_demo/index.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;所感&#34;&gt;所感&lt;/h1&gt;
&lt;p&gt;全体的に～～～&lt;/p&gt;
&lt;h2 id=&#34;flutter-for-web&#34;&gt;Flutter for Web&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;テクニカルプレビュー版ゆえ、コードを多少修正したが、モバイル用に書いてきたコードがそのままWebで動いた。思っていた以上にさくさく描画してくれる。&lt;/li&gt;
&lt;li&gt;テクニカルプレビュー版でも未来を感じる。誰もが夢見たクロスプラットフォーム。
&lt;ul&gt;
&lt;li&gt;Flutter×DartだけでWebアプリを構築できるならば、CSS調整コストや変化の速すぎるJavaScriptのキャッチアップなど、Webアプリ構築関連の悩みを解決する一手になるのでは。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;デザイナーとの協業はどうするか？
&lt;ul&gt;
&lt;li&gt;Flutter for Webに限った話ではないが、デザイナーはDartでコーディングするの？それとも画面モックだけ作成で実際の構築はエンジニア？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;codemagic&#34;&gt;Codemagic&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GUIで簡単にフローを設定できる。
&lt;ul&gt;
&lt;li&gt;FlutterアプリをGoogle PlayやApp Storeにデプロイするには便利そう。&lt;/li&gt;
&lt;li&gt;ビルド結果をSlackやメールへの通知を簡単に設定できる。&lt;/li&gt;
&lt;li&gt;一方で、プラグインが用意されていないため、通常とは異なる処理を含めたい場合、スクリプトをごりごり書くことになる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;想定以上にビルドに時間がかかる。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Gitの操作だけでコンテンツをホスティングできる。
&lt;ul&gt;
&lt;li&gt;新しく覚えることが少なく、技術的にも気持ち的にもだいぶ楽。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;今回設定していないが、独自ドメイン・HTTPS対応している。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;その他&#34;&gt;その他&lt;/h1&gt;
&lt;p&gt;今回のデモアプリ
&lt;a href=&#34;https://taikichi225.github.io/flutter_web_demo/index.html&#34;&gt;https://taikichi225.github.io/flutter_web_demo/index.html&lt;/a&gt;
ホスティング用リポジトリ
&lt;a href=&#34;https://github.com/taikichi225/taikichi225.github.io.git&#34;&gt;https://github.com/taikichi225/taikichi225.github.io.git&lt;/a&gt;
アプリのリポジトリ
&lt;a href=&#34;https://github.com/taikichi225/flutter_web_demo.git&#34;&gt;https://github.com/taikichi225/flutter_web_demo.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/internet_heiwa.png&#34; alt=&#34;test&#34;&gt;&lt;/p&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
